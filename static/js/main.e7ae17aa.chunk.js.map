{"version":3,"sources":["styles/style-constants.js","components/Title.js","components/PostTitle.js","components/PostTable.js","containers/Home.js","components/PageTitle.js","components/PostForm.js","containers/Create.js","containers/App.js","serviceWorker.js","index.js","assets/homebg.jpg"],"names":["styles","colors","turquoise","mblue","charcoal","timberwolf","black","postTitle","mediumorchid","aquamarine","height","tiny","small","medium","large","TitleContainer","styled","span","Title","title","PostTitleContainer","PostTitle","ReactMarkdown","require","Cell","props","date","content","labels","Post","dateFormat","style","fontFamily","source","escapeHtml","TableRows","data","console","log","Table","map","post","i","key","_id","index","marginBottom","createdAt","LoadingIndicator","className","ErrorIndicator","Date","div","PostTable","fetched","loading","error","Home","state","postData","fetchPostData","bind","this","Header","Container","Background","Content","axios","get","apiAddress","then","setState","Component","header","homebg","PageTitleContainer","color","PageTitle","PostForm","createPost","changeTitle","changeContent","changePercent","percentBetter","event","target","value","parseFloat","requestBody","Form","onSubmit","Input","placeholder","type","onChange","fontSize","PostContent","rows","cols","display","flexDirection","alignItems","padding","paddingRight","step","margin","textarea","form","input","Create","App","background","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"4VAmBeA,EAnBA,CACbC,OAAQ,CACNC,UAAW,UACXC,MAAO,UACPC,SAAU,UACVC,WAAY,UACZC,MAAO,UACPC,UAAW,UACXC,aAAc,UACdC,WAAY,WAEdC,OAAQ,CACNC,KAAM,OACNC,MAAO,OACPC,OAAQ,OACRC,MAAO,S,+OCZX,IAEMC,EAAiBC,IAAOC,KAAV,KAWLC,EAbD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,kBAACJ,EAAD,KAAiBI,I,0RCC9C,IAEMC,EAAqBJ,IAAOC,KAAV,IAIbjB,EAAOC,OAAOM,WASVc,EAfG,SAAC,GAAD,IAAGF,EAAH,EAAGA,MAAH,OAAe,kBAACC,EAAD,KAAqBD,I,sgBCKtD,IAAMG,EAAgBC,EAAQ,KAGxBC,EAAO,SAACC,GAAW,IAChBN,EAAgCM,EAAhCN,MAAOO,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,QAAmBF,EAAVG,OAC7B,OACE,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAWV,MAAOA,IAClB,kBAAC,EAAD,KAAQW,IAAWJ,EAAM,oCACzB,yBAAKK,MAAO,CAACC,WAAY,aACzB,kBAACV,EAAD,CACEW,OAAQN,EACRO,YAAY,OAQdC,EAAY,SAACV,GAAW,IACpBW,EAASX,EAATW,KAER,OADAC,QAAQC,IAAIF,GACL,kBAACG,EAAD,KAAQH,EAAKI,KAAI,SAACC,EAAMC,GAE7B,OADAL,QAAQC,IAAIG,GACJ,yBAAKE,IAAKF,EAAKG,IAAKC,MAAOH,EAAGX,MAAO,CAACe,aAAc,SAC1D,kBAAC,EAAD,CAAM3B,MAAOsB,EAAKtB,MAAOO,KAAMe,EAAKM,UAAWpB,QAASc,EAAKd,QAASC,OAAQa,EAAKb,eAKnFoB,EAAmB,kBACvB,4BACE,4BACE,uBACEC,UAAU,2BAFd,oBASEC,EAAiB,kBACrB,8BACE,4BACE,uBACED,UAAU,gCAFd,2BA8BEE,EAAOnC,IAAOoC,IAAV,IACCpD,EAAOC,OAAOI,YAKnBwB,EAAOb,IAAOoC,IAAV,IACYpD,EAAOC,OAAOK,OAQ9BiC,EAAQvB,IAAOoC,IAAV,KAQIC,EA5CG,SAAC,GAEZ,IADLjB,EACI,EADJA,KAAMkB,EACF,EADEA,QAASC,EACX,EADWA,QAASC,EACpB,EADoBA,MAGxB,OADAnB,QAAQC,IAAIF,IACJ,GACN,KAAMkB,GAAWC,EACf,OAAO,kBAAC,EAAD,MACT,KAAKC,EACH,OAAO,kBAAC,EAAD,MACT,QACE,OAAO,kBAAC,EAAD,CAAWpB,KAAMA,M,+2BC7DxBqB,E,kDACL,WAAYhC,GAAQ,IAAD,8BACjB,cAAMA,IAEDiC,MAAQ,CACXC,SAAU,GACVJ,SAAS,EACTD,SAAS,EACTE,OAAO,GAGT,EAAKI,cAAgB,EAAKA,cAAcC,KAAnB,gBAVJ,E,gEAcjBC,KAAKF,kB,+BAGE,IAAD,EACwCE,KAAKJ,MAA3CC,EADF,EACEA,SAAUJ,EADZ,EACYA,QAASD,EADrB,EACqBA,QAASE,EAD9B,EAC8BA,MACnC,OACE,6BACE,kBAACO,EAAD,KACE,kBAAC,EAAD,CAAO5C,MAAM,wBAEf,kBAAC6C,EAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAD,KACE,kBAAC,EAAD,CAAW9B,KAAMuB,EAASvB,KAAMmB,QAASA,EAASD,QAASA,EAASE,MAAOA,S,sCAOrE,IAAD,OACbnB,QAAQC,IAAI,YAEZ6B,IAAMC,IAAIC,oCAAuBC,MAAK,SAAClC,GACrCC,QAAQC,IAAIF,GACZ,EAAKmC,SAAS,CACZZ,SAAUvB,EAAKA,KACfmB,SAAS,EACTD,SAAS,EACTE,OAAO,OAER,SAACA,GACFnB,QAAQC,IAAIkB,GACZ,EAAKe,SAAS,CACZhB,SAAS,EACTD,SAAS,EACTE,OAAO,W,GAnDIgB,aAgEbT,EAAS/C,IAAOyD,OAAV,KASNT,EAAYhD,IAAOoC,IAAV,KAYTa,EAAajD,IAAOoC,IAAV,IACUsB,KAUpBR,EAAUlD,IAAOoC,IAAV,KAOEK,I,mLC9Gf,IAEMkB,EAAqB3D,IAAOC,KAAV,KACb,SAAAQ,GAAK,OAAIA,EAAMmD,MAAQ5E,EAAOC,OAAOwB,EAAMmD,OAAS,SAOhDC,EAVG,SAAC,GAAD,IAAG1D,EAAH,EAAGA,MAAOyD,EAAV,EAAUA,MAAV,OAAsB,kBAACD,EAAD,CAAoBC,MAAOA,GAAQzD,I,4dCQrE2D,G,kDACJ,WAAYrD,GAAO,IAAD,8BAChB,cAAMA,IACDsD,WAAa,EAAKA,WAAWlB,KAAhB,gBAClB,EAAKmB,YAAc,EAAKA,YAAYnB,KAAjB,gBACnB,EAAKoB,cAAgB,EAAKA,cAAcpB,KAAnB,gBACrB,EAAKqB,cAAgB,EAAKA,cAAcrB,KAAnB,gBAErB,EAAKH,MAAQ,CACXvC,MAAO,GACPQ,QAAS,GACTwD,cAAe,GAVD,E,wDAcNC,GACVtB,KAAKS,SAAS,CAACpD,MAAOiE,EAAMC,OAAOC,OAAS,O,oCAGhCF,GACZtB,KAAKS,SAAS,CAAC5C,QAASyD,EAAMC,OAAOC,OAAS,W,oCAGlCF,GACZtB,KAAKS,SAAS,CAACY,cAAeI,WAAWH,EAAMC,OAAOC,QAAU,O,iCAGvDF,GACT/C,QAAQC,IAAI,iBADG,MAEyBwB,KAAKJ,MAAtCvC,EAFQ,EAERA,MAAOQ,EAFC,EAEDA,QAASwD,EAFR,EAEQA,cACvB9C,QAAQC,IAAIX,GACZ,IAAM6D,EAAc,CAClBrE,MAAOA,EACPQ,QAASA,EACTwD,cAAeA,GAEjBhB,IAAM1B,KAAK4B,mCAAuBmB,GAAalB,MAAK,SAAClC,GACnDC,QAAQC,IAAIF,MACX,SAACoB,GACFnB,QAAQC,IAAIkB,Q,+BAKd,OACE,kBAACiC,GAAD,CAAMC,SAAU5B,KAAKiB,YACnB,kBAACY,GAAD,CAAOC,YAAY,QAAQC,KAAK,OAAOP,MAAOxB,KAAKJ,MAAMvC,MAAO2E,SAAUhC,KAAKkB,YAAajD,MAAO,CAACgE,SAAU,WAC9G,kBAACC,GAAD,CAAaC,KAAK,KAAKC,KAAK,MAAMZ,MAAOxB,KAAKJ,MAAM/B,QAASmE,SAAUhC,KAAKmB,gBAC5E,2BAAOlD,MAAO,CAACoE,QAAS,OAAQC,cAAe,MAAO1F,OAAQ,OAAQ2F,WAAY,SAAUC,QAAS,SACnG,uBAAGvE,MAAO,CAACwE,aAAc,OAAQR,SAAU,QAAS/D,WAAY,YAAhE,kBACA,kBAAC2D,GAAD,CAAOE,KAAK,SAASW,KAAK,OAAOlB,MAAOxB,KAAKJ,MAAMyB,cAAeW,SAAUhC,KAAKoB,iBAEnF,2BAAOW,KAAK,SAASP,MAAM,SAASvD,MAAO,CAAC0E,OAAQ,OAAQV,SAAU,MAAOO,QAAS,e,GApDvE9B,aA0DjBwB,GAAchF,IAAO0F,SAAV,MAKXjB,GAAOzE,IAAO2F,KAAV,MASJhB,GAAQ3E,IAAO4F,MAAV,MAQI9B,M,ilBChFT+B,G,kDACL,WAAYpF,GAAQ,uCACZA,G,qDAIL,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,EAAD,CAAWN,MAAM,qBAAqByD,MAAM,cAC5C,kBAAC,EAAD,CAAWzD,MAAM,SAASyD,MAAM,kBAElC,kBAAC,GAAD,KACI,kBAAC,GAAD,Y,GAbSJ,aAqBfT,GAAS/C,IAAOyD,OAAV,MAUNT,GAAYhD,IAAOoC,IAAV,KAGWsB,KAIpBR,GAAUlD,IAAOoC,IAAV,MAWEyD,M,OCtCAC,OAff,WACE,OACE,yBAAK7D,UAAU,MAAMlB,MAAO,CAACgF,WAAY/G,EAAOC,OAAOE,QACrD,4BAAQ8C,UAAU,cAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO+D,KAAK,SAASC,UAAWxD,KAElC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOuD,KAAK,WAAWC,UAAWJ,SCJxBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvD,MAAK,SAAAwD,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,oC","file":"static/js/main.e7ae17aa.chunk.js","sourcesContent":["const styles = {\n  colors: {\n    turquoise: '#38E0BB',\n    mblue: '#011638',\n    charcoal: '#364156',\n    timberwolf: '#DAD7CD',\n    black: '#000000',\n    postTitle: \"#FCDFA6\",\n    mediumorchid: \"#B847FF\",\n    aquamarine: \"#93FFD4\"\n  },\n  height: {\n    tiny: '30px',\n    small: '48px',\n    medium: '72px',\n    large: '98px'\n  }\n}\n\nexport default styles\n","import React from 'react';\nimport styled from 'styled-components'\n\nconst Title = ({ title }) => <TitleContainer>{title}</TitleContainer>\n\nconst TitleContainer = styled.span`\n  font-family: Courier;\n  display: auto;\n  margin-left: 0;\n  margin-right: 0;\n  text-align: center;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 12px;\n`\n\nexport default Title\n","import React from 'react';\nimport styled from 'styled-components'\nimport styles from '../styles/style-constants'\n\nconst PostTitle = ({ title }) => <PostTitleContainer>{title}</PostTitleContainer>\n\nconst PostTitleContainer = styled.span`\n  font-size: 1.2em;\n  font-weight: bold;\n  font-family: Palatino;\n  color: ${styles.colors.postTitle};\n  display: flex;\n  align-items: center;\n\n  @media (min-width: 801px) {\n    font-size: 1.5em;\n  }\n`\n\nexport default PostTitle\n","import React from 'react';\nimport dateFormat from 'dateformat'\n\nimport PropTypes from 'prop-types'\nimport '../styles/Home.css';\nimport styles from '../styles/style-constants'\nimport styled from 'styled-components'\nimport PostTitle from './PostTitle'\n\nconst ReactMarkdown = require('react-markdown')\n\n// contents of a post should either be in plaintext, markdown, or html\nconst Cell = (props) => {\n  const {title, date, content, labels} = props\n  return (\n    <Post>\n      <PostTitle title={title} />\n      <Date>{ dateFormat(date, \"dddd, mmmm dS, yyyy, h:MM:ss TT\") }</Date>\n      <div style={{fontFamily: \"Palatino\"}}>\n      <ReactMarkdown\n        source={content}\n        escapeHtml={false}\n      />\n      </div>\n    </Post>\n\n  )\n}\n\nconst TableRows = (props) => {\n  const { data } = props\n  console.log(data)\n  return <Table>{data.map((post, i) => {\n    console.log(post)\n    return (<div key={post._id} index={i} style={{marginBottom: \"24px\"}}>\n      <Cell title={post.title} date={post.createdAt} content={post.content} labels={post.labels}/>\n    </div>)\n  })}</Table>\n}\n\nconst LoadingIndicator = () => (\n  <tr>\n    <td>\n      <i\n        className=\"fas fa-spinner fa-spin\"\n      />\n        Fetching Posts\n    </td>\n  </tr>\n)\n\nconst ErrorIndicator = () => (\n  <span>\n    <td>\n      <i\n        className=\"fas fa-exclamation-triangle\"\n      />\n        Could not fetch posts\n    </td>\n  </span>\n)\n\nconst PostTable = ({\n  data, fetched, loading, error\n}) => {\n  console.log(data)\n  switch (true) {\n    case !fetched && loading:\n      return <LoadingIndicator />\n    case error:\n      return <ErrorIndicator />\n    default:\n      return <TableRows data={data} />\n  }\n}\n\nPostTable.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  fetched: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired\n}\n\nconst Date = styled.div`\n  color: ${styles.colors.timberwolf};\n  font-size: 0.8em;\n  margin-bottom: 12px\n`\n\nconst Post = styled.div`\n  background-color: ${styles.colors.black};\n  padding: 64px;\n  margin-left: 10%;\n  margin-right: 10%;\n  text-align: left;\n  border-radius: 10px;\n`\n\nconst Table = styled.div`\n  transform-origin: 0;\n  transform: scale(0.5);\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`\n\nexport default PostTable;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport homebg from '../assets/homebg.jpg'\n\nimport styles from '../styles/style-constants'\nimport apiAddress from '../constants'\nimport Title from '../components/Title'\nimport PostTable from '../components/PostTable'\n\nclass Home extends Component {\n constructor(props) {\n   super(props)\n\n   this.state = {\n     postData: [],\n     loading: true,\n     fetched: false,\n     error: false\n   }\n\n   this.fetchPostData = this.fetchPostData.bind(this)\n }\n\n componentDidMount(){\n   this.fetchPostData()\n }\n\n render(){\n   const { postData, loading, fetched, error } = this.state\n    return (\n      <div>\n        <Header>\n          <Title title=\"ONE PERCENT BETTER\" />\n        </Header>\n        <Container>\n          <Background/>\n          <Content>\n            <PostTable data={postData.data} loading={loading} fetched={fetched} error={error} />\n          </Content>\n        </Container>\n      </div>\n    );\n  }\n\n  fetchPostData(){\n    console.log(\"fetching\")\n\n    axios.get(apiAddress + 'posts/').then((data) => {\n      console.log(data)\n      this.setState({\n        postData: data.data,\n        loading: false,\n        fetched: true,\n        error: false\n      })\n    }, (error) => {\n      console.log(error)\n      this.setState({\n        loading: false,\n        fetched: false,\n        error: true\n      })\n    })\n  }\n}\n\nHome.propTypes = {\n  postData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  loading: PropTypes.bool.isRequired,\n  fetched: PropTypes.bool.isRequired,\n  error: PropTypes.bool.isRequired\n}\n\nconst Header = styled.header`\n  background-color: rgba(0,0,0,.5);\n  padding: 10px;\n  position: fixed;\n  width:100%;\n  top:0;\n  z-index: 1;\n`\n\nconst Container = styled.div`\n  margin-top: 50px;\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  perspective: 20px;\n  perspective-origin: 0%;\n  transform: translateZ(0px);\n`\n\nconst Background = styled.div`\n  background-image: url(${homebg});\n  background-size: 500%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  transform: translateZ(0px);\n`\n\nconst Content = styled.div`\n  fontFamily: Merriweather;\n  margin-top: 24px;\n  transform-origin: 0;\n  transform: translateZ(10px);\n`\n\nexport default Home;\n","import React from 'react';\nimport styled from 'styled-components'\nimport styles from '../styles/style-constants'\n\nconst PageTitle = ({ title, color }) => <PageTitleContainer color={color}>{title}</PageTitleContainer>\n\nconst PageTitleContainer = styled.span`\n  color: ${props => props.color ? styles.colors[props.color] : 'red'};\n  font-weight: bold;\n  font-family: Courier;\n  text-align: center;\n  padding-left: 16px;\n`\n\nexport default PageTitle\n","import React, {Component} from 'react';\nimport ReactHtmlParser from 'react-html-parser'\nimport dateFormat from 'dateformat'\nimport axios from 'axios'\n\nimport PropTypes from 'prop-types'\nimport apiAddress from '../constants'\nimport styles from '../styles/style-constants'\nimport styled from 'styled-components'\nimport PostTitle from './PostTitle'\n\n\nclass PostForm extends Component {\n  constructor(props){\n    super(props)\n    this.createPost = this.createPost.bind(this)\n    this.changeTitle = this.changeTitle.bind(this)\n    this.changeContent = this.changeContent.bind(this)\n    this.changePercent = this.changePercent.bind(this)\n\n    this.state = {\n      title: \"\",\n      content: \"\",\n      percentBetter: 0\n    }\n  }\n\n  changeTitle(event) {\n    this.setState({title: event.target.value || \"\"});\n  }\n\n  changeContent(event) {\n    this.setState({content: event.target.value || \"oops\"});\n  }\n\n  changePercent(event) {\n    this.setState({percentBetter: parseFloat(event.target.value) || \"\"});\n  }\n\n  createPost(event){\n    console.log(\"creating post\")\n    const {title, content, percentBetter} = this.state\n    console.log(content)\n    const requestBody = {\n      title: title,\n      content: content,\n      percentBetter: percentBetter\n    }\n    axios.post(apiAddress + 'posts/', requestBody).then((data) => {\n      console.log(data)\n    }, (error) => {\n      console.log(error)\n    })\n  }\n\n  render(){\n    return (\n      <Form onSubmit={this.createPost}>\n        <Input placeholder=\"Title\" type=\"text\" value={this.state.title} onChange={this.changeTitle} style={{fontSize: \"1.2em\"}}/>\n        <PostContent rows=\"30\" cols=\"100\" value={this.state.content} onChange={this.changeContent}/>\n        <label style={{display: \"flex\", flexDirection: \"row\", height: \"24px\", alignItems: \"center\", padding: \"12px\"}}>\n          <p style={{paddingRight: \"12px\", fontSize: \"0.8em\", fontFamily: \"Courier\"}}>PERCENT BETTER</p>\n          <Input type=\"number\" step=\"0.05\" value={this.state.percentBetter} onChange={this.changePercent}/>\n        </label>\n        <input type=\"submit\" value=\"Submit\" style={{margin: \"12px\", fontSize: \"1em\", padding: \"12px\"}}/>\n      </Form>\n    )\n  }\n}\n\nconst PostContent = styled.textarea`\n  margin-top: 12px;\n  border-radius: 5px;\n`\n\nconst Form = styled.form`\n  margin-top: 64px;\n  margin-left: 10%;\n  margin-right: 10%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst Input = styled.input`\n  border-radius: 5px;\n  font-family: Courier;\n  padding: 4px;\n`\n\n\n\nexport default PostForm;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport axios from 'axios'\nimport homebg from '../assets/homebg.jpg'\n\nimport styles from '../styles/style-constants'\nimport apiAddress from '../constants'\nimport Title from '../components/Title'\nimport PageTitle from '../components/PageTitle'\nimport PostForm from '../components/PostForm'\n\nclass Create extends Component {\n constructor(props) {\n   super(props)\n }\n\n render(){\n    return (\n      <Container>\n        <Header>\n          <PageTitle title=\"ONE PERCENT BETTER\" color=\"turquoise\"/>\n          <PageTitle title=\"CREATE\" color=\"mediumorchid\"/>\n        </Header>\n        <Content>\n            <PostForm/>\n        </Content>\n      </Container>\n    );\n  }\n}\n\n\nconst Header = styled.header`\n  background-color: rgba(0,0,0,.5);\n  padding: 10px;\n  position: fixed;\n  width:100%;\n  top:0;\n  display: flex;\n  justify-content: center;\n`\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  background-image: url(${homebg});\n`\n\n\nconst Content = styled.div`\n  margin-top: 50px;\n  margin-left: 10%;\n  margin-right: 10%;\n  border-radius: 2px;\n  background-color: black;\n  display: flex;\n  flex-direction: column;\n`\n\n\nexport default Create;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Home from './Home'\nimport Create from './Create'\nimport '../styles/App.css';\nimport styles from '../styles/style-constants'\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{background: styles.colors.mblue}}>\n      <header className=\"App-header\">\n        <Router>\n          <Route path='/home/' component={Home} />\n        </Router>\n        <Router>\n          <Route path='/create/' component={Create} />\n        </Router>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/homebg.fa872aa7.jpg\";"],"sourceRoot":""}